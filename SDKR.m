function SDKR()
%SDKR Solutionneur et éditeur de grilles de Sudoku
%   Permet de résoudre des grilles de:
%       dimension 2 (4x4 cases)
%       dimension 3 (9x9 cases)
%
%   Auteur: Luis Vieira da Silva
%   Date de création: 22.12.2015
    version = '0.5.0';
    datemodif = '20.07.2017';
    
%% Définitions préalables
dim=3; % Dimension de la grille (comprise entre 2 et 3)

% Taille d'une case:
switch dim
    case 2
        taillecase=60;
        taillechiffre=30;
    case 3
        taillecase=30;
        taillechiffre=15;
    otherwise
        h_err=errordlg('Seules dimensions permises: 2(4x4) et 3(9x9)','SDKR');
        uiwait(h_err)
        return
end

eca=2; % Ecart entre cases (en pixels)-constante 
big_eca=1; % Ecart entre zones 

%% Création UI
hfig=figure('name',['SDKR v' version],...
    'numbertitle','off',...
    'toolbar','none',...
    'menubar','none',...
    'position',[100 100 550 400]);
centerfig(hfig)

uimenu(hfig,'label','Développeur','callback',@LoadGrid)

for ind=1:dim^4
    % Calcul de la ligne et colonne correspondante
    [lig,col]=hcell2lcs(dim,ind);
    
    % Ecart supplémentaire correspondant (séparation grands carrés)
    if mod(col,dim)==0
        big_col=col/dim;
    else
        big_col=ceil(col/dim)+1;
    end
    
    if mod((dim^2-lig+1),dim)==0
        big_lig=(dim^2-lig+1)/dim;
    else 
        big_lig=ceil((dim^2-lig+1)/dim)+1;
    end
    xPos=50+(taillecase+eca)*col+big_col*big_eca;
    yPos=50+(taillecase+eca)*(dim^2-lig)+big_lig*big_eca;
    % Création cases
    hcell(ind)=uicontrol('parent',hfig,...
        'style','edit',...
        'position',[xPos yPos taillecase taillecase],...
        'fontsize',taillechiffre,...
        'fontweight','normal',...
        'UserData',[lig col],...
        'callback',@Controle);
    
    % Création sous-cases
    for jnd=1:dim
        for knd=1:dim
            h_candcell(ind,jnd,knd)=uicontrol('parent',hfig,...
                'style','text',...
                'visible','on',...
                'string','s',...
                'position',[xPos+(jnd-1)*(taillecase/dim) yPos taillecase/dim taillecase/dim],...
                'fontsize',taillechiffre/dim,...
                'fontweight','normal');
        end
    end
    
end

% UI Pushbuttons
h_scf=uicontrol('parent',hfig,...
        'style','pushbutton',...
        'position',[420 350 100 30],...
        'string','Config. initiale',...
        'enable','on',...
        'callback',@StartConf,...
        'tag','StartConfButton');
    
h_res=uicontrol('parent',hfig,...
        'style','pushbutton',...
        'position',[420 310 100 30],...
        'string','Reset',...
        'enable','off',...
        'callback',@Reset,...
        'tag','ResetButton');   
    
h_slv=uicontrol('parent',hfig,...
        'style','pushbutton',...
        'enable','off',...
        'position',[420 250 100 30],...
        'string','Résolution',...
        'callback',@Solve,...
        'tag','SolveButton');
    
h_shcd=uicontrol('parent',hfig,...
        'style','pushbutton',...
        'enable','off',...
        'position',[420 150 100 30],...
        'string','Show/Hide candidates',...
        'callback',@ShHiCand,...
        'tag','CandidatesButton');
    
h_del=uicontrol('parent',hfig,...
        'style','pushbutton',...
        'enable','off',...
        'position',[420 100 100 30],...
        'string','Effacer',...
        'callback',@Erase,...
        'tag','EraseButton');
  
ui_struct=struct();
ui_struct.hcell=hcell;
ui_struct.dim=dim;
guidata(hfig,ui_struct)

end


